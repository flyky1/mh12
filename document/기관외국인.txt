주식외국인종목별매매동향
ka10008

import requests
import json

# 주식외국인종목별매매동향
def fn_ka10008(token, data, cont_yn='N', next_key=''):
	# 1. 요청할 API URL
	#host = 'https://mockapi.kiwoom.com' # 모의투자
	host = 'https://api.kiwoom.com' # 실전투자
	endpoint = '/api/dostk/frgnistt'
	url =  host + endpoint

	# 2. header 데이터
	headers = {
		'Content-Type': 'application/json;charset=UTF-8', # 컨텐츠타입
		'authorization': f'Bearer {token}', # 접근토큰
		'cont-yn': cont_yn, # 연속조회여부
		'next-key': next_key, # 연속조회키
		'api-id': 'ka10008', # TR명
	}

	# 3. http POST 요청
	response = requests.post(url, headers=headers, json=data)

	# 4. 응답 상태 코드와 데이터 출력
	print('Code:', response.status_code)
	print('Header:', json.dumps({key: response.headers.get(key) for key in ['next-key', 'cont-yn', 'api-id']}, indent=4, ensure_ascii=False))
	print('Body:', json.dumps(response.json(), indent=4, ensure_ascii=False))  # JSON 응답을 파싱하여 출력

# 실행 구간
if __name__ == '__main__':
	# 1. 토큰 설정
	MY_ACCESS_TOKEN = '사용자 AccessToken'# 접근토큰

	# 2. 요청 데이터
	params = {
		'stk_cd': '005930', # 종목코드 거래소별 종목코드 (KRX:039490,NXT:039490_NX,SOR:039490_AL)
	}

	# 3. API 실행
	fn_ka10008(token=MY_ACCESS_TOKEN, data=params)

	# next-key, cont-yn 값이 있을 경우
	# fn_ka10008(token=MY_ACCESS_TOKEN, data=params, cont_yn='Y', next_key='nextkey..')

Header
Element	한글명	type	Required	Length	Description
authorization	접근토큰	String	Y	1000	토큰 지정시 토큰타입("Bearer") 붙혀서 호출
예) Bearer Egicyx...
cont-yn	연속조회여부	String	N	1	응답 Header의 연속조회여부값이 Y일 경우 다음데이터 요청시 응답 Header의 cont-yn값 세팅
next-key	연속조회키	String	N	50	응답 Header의 연속조회여부값이 Y일 경우 다음데이터 요청시 응답 Header의 next-key값 세팅
api-id	TR명	String	Y	10	
Body
Element	한글명	type	Required	Length	Description
stk_cd	종목코드	String	Y	20	거래소별 종목코드
(KRX:039490,NXT:039490_NX,SOR:039490_AL)
응답
Header
Element	한글명	type	Required	Length	Description
cont-yn	연속조회여부	String	N	1	다음 데이터가 있을시 Y값 전달
next-key	연속조회키	String	N	50	다음 데이터가 있을시 다음 키값 전달
api-id	TR명	String	Y	10	
Body
Element	한글명	type	Required	Length	Description
stk_frgnr	주식외국인	LIST	N		
- dt	일자	String	N	20	
- close_pric	종가	String	N	20	
- pred_pre	전일대비	String	N	20	
- trde_qty	거래량	String	N	20	
- chg_qty	변동수량	String	N	20	
- poss_stkcnt	보유주식수	String	N	20	
- wght	비중	String	N	20	
- gain_pos_stkcnt	취득가능주식수	String	N	20	
- frgnr_limit	외국인한도	String	N	20	
- frgnr_limit_irds	외국인한도증감	String	N	20	
- limit_exh_rt	한도소진률	String	N	20


주식기관요청
ka10009

import requests
import json

# 주식기관요청
def fn_ka10009(token, data, cont_yn='N', next_key=''):
	# 1. 요청할 API URL
	#host = 'https://mockapi.kiwoom.com' # 모의투자
	host = 'https://api.kiwoom.com' # 실전투자
	endpoint = '/api/dostk/frgnistt'
	url =  host + endpoint

	# 2. header 데이터
	headers = {
		'Content-Type': 'application/json;charset=UTF-8', # 컨텐츠타입
		'authorization': f'Bearer {token}', # 접근토큰
		'cont-yn': cont_yn, # 연속조회여부
		'next-key': next_key, # 연속조회키
		'api-id': 'ka10009', # TR명
	}

	# 3. http POST 요청
	response = requests.post(url, headers=headers, json=data)

	# 4. 응답 상태 코드와 데이터 출력
	print('Code:', response.status_code)
	print('Header:', json.dumps({key: response.headers.get(key) for key in ['next-key', 'cont-yn', 'api-id']}, indent=4, ensure_ascii=False))
	print('Body:', json.dumps(response.json(), indent=4, ensure_ascii=False))  # JSON 응답을 파싱하여 출력

# 실행 구간
if __name__ == '__main__':
	# 1. 토큰 설정
	MY_ACCESS_TOKEN = '사용자 AccessToken'# 접근토큰

	# 2. 요청 데이터
	params = {
		'stk_cd': '005930', # 종목코드 거래소별 종목코드 (KRX:039490,NXT:039490_NX,SOR:039490_AL)
	}

	# 3. API 실행
	fn_ka10009(token=MY_ACCESS_TOKEN, data=params)

	# next-key, cont-yn 값이 있을 경우
	# fn_ka10009(token=MY_ACCESS_TOKEN, data=params, cont_yn='Y', next_key='nextkey..')

요청
Header
Element	한글명	type	Required	Length	Description
authorization	접근토큰	String	Y	1000	토큰 지정시 토큰타입("Bearer") 붙혀서 호출
예) Bearer Egicyx...
cont-yn	연속조회여부	String	N	1	응답 Header의 연속조회여부값이 Y일 경우 다음데이터 요청시 응답 Header의 cont-yn값 세팅
next-key	연속조회키	String	N	50	응답 Header의 연속조회여부값이 Y일 경우 다음데이터 요청시 응답 Header의 next-key값 세팅
api-id	TR명	String	Y	10	
Body
Element	한글명	type	Required	Length	Description
stk_cd	종목코드	String	Y	20	거래소별 종목코드
(KRX:039490,NXT:039490_NX,SOR:039490_AL)
응답
Header
Element	한글명	type	Required	Length	Description
cont-yn	연속조회여부	String	N	1	다음 데이터가 있을시 Y값 전달
next-key	연속조회키	String	N	50	다음 데이터가 있을시 다음 키값 전달
api-id	TR명	String	Y	10	
Body
Element	한글명	type	Required	Length	Description
date	날짜	String	N	20	
close_pric	종가	String	N	20	
pre	대비	String	N	20	
orgn_dt_acc	기관기간누적	String	N	20	
orgn_daly_nettrde	기관일별순매매	String	N	20	
frgnr_daly_nettrde	외국인일별순매매	String	N	20	
frgnr_qota_rt	외국인지분율	String	N	20


기관외국인연속매매현황요청
ka10131


import requests
import json

# 기관외국인연속매매현황요청
def fn_ka10131(token, data, cont_yn='N', next_key=''):
	# 1. 요청할 API URL
	#host = 'https://mockapi.kiwoom.com' # 모의투자
	host = 'https://api.kiwoom.com' # 실전투자
	endpoint = '/api/dostk/frgnistt'
	url =  host + endpoint

	# 2. header 데이터
	headers = {
		'Content-Type': 'application/json;charset=UTF-8', # 컨텐츠타입
		'authorization': f'Bearer {token}', # 접근토큰
		'cont-yn': cont_yn, # 연속조회여부
		'next-key': next_key, # 연속조회키
		'api-id': 'ka10131', # TR명
	}

	# 3. http POST 요청
	response = requests.post(url, headers=headers, json=data)

	# 4. 응답 상태 코드와 데이터 출력
	print('Code:', response.status_code)
	print('Header:', json.dumps({key: response.headers.get(key) for key in ['next-key', 'cont-yn', 'api-id']}, indent=4, ensure_ascii=False))
	print('Body:', json.dumps(response.json(), indent=4, ensure_ascii=False))  # JSON 응답을 파싱하여 출력

# 실행 구간
if __name__ == '__main__':
	# 1. 토큰 설정
	MY_ACCESS_TOKEN = '사용자 AccessToken'# 접근토큰

	# 2. 요청 데이터
	params = {
		'dt': '1', # 기간 1:최근일, 3:3일, 5:5일, 10:10일, 20:20일, 120:120일, 0:시작일자/종료일자로 조회
		'strt_dt': '', # 시작일자 YYYYMMDD
		'end_dt': '', # 종료일자 YYYYMMDD
		'mrkt_tp': '001', # 장구분 001:코스피, 101:코스닥
		'netslmt_tp': '2', # 순매도수구분 2:순매수(고정값)
		'stk_inds_tp': '0', # 종목업종구분 0:종목(주식),1:업종
		'amt_qty_tp': '0', # 금액수량구분 0:금액, 1:수량
		'stex_tp': '1', # 거래소구분 1:KRX, 2:NXT, 3:통합
	}

	# 3. API 실행
	fn_ka10131(token=MY_ACCESS_TOKEN, data=params)

	# next-key, cont-yn 값이 있을 경우
	# fn_ka10131(token=MY_ACCESS_TOKEN, data=params, cont_yn='Y', next_key='nextkey..')

요청
Header
Element	한글명	type	Required	Length	Description
authorization	접근토큰	String	Y	1000	토큰 지정시 토큰타입("Bearer") 붙혀서 호출
예) Bearer Egicyx...
cont-yn	연속조회여부	String	N	1	응답 Header의 연속조회여부값이 Y일 경우 다음데이터 요청시 응답 Header의 cont-yn값 세팅
next-key	연속조회키	String	N	50	응답 Header의 연속조회여부값이 Y일 경우 다음데이터 요청시 응답 Header의 next-key값 세팅
api-id	TR명	String	Y	10	
Body
Element	한글명	type	Required	Length	Description
dt	기간	String	Y	3	1:최근일, 3:3일, 5:5일, 10:10일, 20:20일, 120:120일, 0:시작일자/종료일자로 조회
strt_dt	시작일자	String	N	8	YYYYMMDD
end_dt	종료일자	String	N	8	YYYYMMDD
mrkt_tp	장구분	String	Y	3	001:코스피, 101:코스닥
netslmt_tp	순매도수구분	String	Y	1	2:순매수(고정값)
stk_inds_tp	종목업종구분	String	Y	1	0:종목(주식),1:업종
amt_qty_tp	금액수량구분	String	Y	1	0:금액, 1:수량
stex_tp	거래소구분	String	Y	1	1:KRX, 2:NXT, 3:통합
응답
Header
Element	한글명	type	Required	Length	Description
cont-yn	연속조회여부	String	N	1	다음 데이터가 있을시 Y값 전달
next-key	연속조회키	String	N	50	다음 데이터가 있을시 다음 키값 전달
api-id	TR명	String	Y	10	
Body
Element	한글명	type	Required	Length	Description
orgn_frgnr_cont_trde_prst	기관외국인연속매매현황	LIST	N		
- rank	순위	String	N		
- stk_cd	종목코드	String	N	6	
- stk_nm	종목명	String	N	20	
- prid_stkpc_flu_rt	기간중주가등락률	String	N		
- orgn_nettrde_amt	기관순매매금액	String	N		
- orgn_nettrde_qty	기관순매매량	String	N		
- orgn_cont_netprps_dys	기관계연속순매수일수	String	N		
- orgn_cont_netprps_qty	기관계연속순매수량	String	N		
- orgn_cont_netprps_amt	기관계연속순매수금액	String	N		
- frgnr_nettrde_qty	외국인순매매량	String	N		
- frgnr_nettrde_amt	외국인순매매액	String	N		
- frgnr_cont_netprps_dys	외국인연속순매수일수	String	N		
- frgnr_cont_netprps_qty	외국인연속순매수량	String	N		
- frgnr_cont_netprps_amt	외국인연속순매수금액	String	N		
- nettrde_qty	순매매량	String	N		
- nettrde_amt	순매매액	String	N		
- tot_cont_netprps_dys	합계연속순매수일수	String	N		
- tot_cont_nettrde_qty	합계연속순매매수량	String	N		
- tot_cont_netprps_amt	합계연속순매수금액	String	N		